{"ast":null,"code":"var _jsxFileName = \"D:\\\\calculator\\\\calculator\\\\src\\\\layout\\\\Calculator\\\\Calculator.js\";\nimport React from 'react';\nimport Screen from './Screen/Screen';\nimport Keypad from './Keypad/Keypad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Calculator extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      equation: '',\n      result: 0\n    };\n    this.onButtonPress = event => {\n      let equation = this.state.equation;\n      const pressedButton = event.target.innerHTML;\n      if (pressedButton === 'C') return this.clear();else if (pressedButton >= '0' && pressedButton <= '9' || pressedButton === '.') equation += pressedButton;else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';else if (pressedButton === '=') {\n        try {\n          const evalResult = eval(equation);\n          const result = Number.isInteger(evalResult) ? evalResult : evalResult.toFixed(2);\n          this.setState({\n            result\n          });\n        } catch (error) {\n          alert('Invalid Mathematical Equation');\n        }\n      } else {\n        equation = equation.trim();\n        equation = equation.substr(0, equation.length - 1);\n      }\n      this.setState({\n        equation: equation\n      });\n    };\n  }\n  clear() {\n    this.setState({\n      equation: '',\n      result: 0\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        equation: this.state.equation,\n        result: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Keypad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Calculator;","map":{"version":3,"names":["React","Screen","Keypad","Calculator","Component","state","equation","result","onButtonPress","event","pressedButton","target","innerHTML","clear","indexOf","evalResult","eval","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","render"],"sources":["D:/calculator/calculator/src/layout/Calculator/Calculator.js"],"sourcesContent":["import React from 'react';\r\nimport Screen from './Screen/Screen';\r\nimport Keypad from './Keypad/Keypad';\r\n\r\nclass Calculator extends React.Component {\r\n    state= {\r\n        equation: '',\r\n        result: 0\r\n    }\r\n\r\n    onButtonPress = event => {\r\n        let equation = this.state.equation;\r\n        const pressedButton = event.target.innerHTML;\r\n        if (pressedButton === 'C') return this.clear();\r\n        else if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') equation += pressedButton;\r\n        else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';\r\n        else if (pressedButton === '=') {\r\n          try {\r\n            const evalResult = eval(equation);\r\n            const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\r\n            this.setState({result});\r\n          } catch (error) {\r\n            alert('Invalid Mathematical Equation');\r\n          }\r\n        }\r\n        else {\r\n          equation = equation.trim();\r\n          equation = equation.substr(0, equation.length - 1);\r\n        }\r\n                    \r\n        this.setState({equation: equation});\r\n      }\r\n      clear() {\r\n        this.setState({equation: '', result: 0});\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <main className=\"calculator\">\r\n            <Screen equation={this.state.equation} result={this.state.result}/>\r\n            <Keypad />\r\n        </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AAAC;AAErC,MAAMC,UAAU,SAASH,KAAK,CAACI,SAAS,CAAC;EAAA;IAAA;IAAA,KACrCC,KAAK,GAAE;MACHC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC;IAAA,KAEDC,aAAa,GAAGC,KAAK,IAAI;MACrB,IAAIH,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ;MAClC,MAAMI,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,SAAS;MAC5C,IAAIF,aAAa,KAAK,GAAG,EAAE,OAAO,IAAI,CAACG,KAAK,EAAE,CAAC,KAC1C,IAAKH,aAAa,IAAI,GAAG,IAAIA,aAAa,IAAI,GAAG,IAAKA,aAAa,KAAK,GAAG,EAAEJ,QAAQ,IAAII,aAAa,CAAC,KACvG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACI,OAAO,CAACJ,aAAa,CAAC,KAAK,CAAC,CAAC,EAAEJ,QAAQ,IAAI,GAAG,GAAGI,aAAa,GAAG,GAAG,CAAC,KACnG,IAAIA,aAAa,KAAK,GAAG,EAAE;QAC9B,IAAI;UACF,MAAMK,UAAU,GAAGC,IAAI,CAACV,QAAQ,CAAC;UACjC,MAAMC,MAAM,GAAGU,MAAM,CAACC,SAAS,CAACH,UAAU,CAAC,GAAEA,UAAU,GAAGA,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC;UAC/E,IAAI,CAACC,QAAQ,CAAC;YAACb;UAAM,CAAC,CAAC;QACzB,CAAC,CAAC,OAAOc,KAAK,EAAE;UACdC,KAAK,CAAC,+BAA+B,CAAC;QACxC;MACF,CAAC,MACI;QACHhB,QAAQ,GAAGA,QAAQ,CAACiB,IAAI,EAAE;QAC1BjB,QAAQ,GAAGA,QAAQ,CAACkB,MAAM,CAAC,CAAC,EAAElB,QAAQ,CAACmB,MAAM,GAAG,CAAC,CAAC;MACpD;MAEA,IAAI,CAACL,QAAQ,CAAC;QAACd,QAAQ,EAAEA;MAAQ,CAAC,CAAC;IACrC,CAAC;EAAA;EACDO,KAAK,GAAG;IACN,IAAI,CAACO,QAAQ,CAAC;MAACd,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAC,CAAC,CAAC;EAC1C;EAEFmB,MAAM,GAAG;IACL,oBACI;MAAM,SAAS,EAAC,YAAY;MAAA,wBAC5B,QAAC,MAAM;QAAC,QAAQ,EAAE,IAAI,CAACrB,KAAK,CAACC,QAAS;QAAC,MAAM,EAAE,IAAI,CAACD,KAAK,CAACE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eACnE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAEX;AACJ;AAEA,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}